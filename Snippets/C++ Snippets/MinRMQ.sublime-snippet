<snippet>
	<content><![CDATA[
class RMQTable {
private:
    vector<vector<int>> table;
public:
    RMQTable(const vector<int>& arr) {
        int n = arr.size();
        int log2n = int(log2(n)) + 1;

        table.assign(n, vector<int>(log2n, 0));

        for (int i = 0; i < n; ++i) {
            table[i][0] = arr[i];
        }

        for (int j = 1; (1 << j) <= n; ++j) {
            for (int i = 0; i + (1 << j) - 1 < n; ++i) {
                table[i][j] = min(table[i][j - 1], table[i + (1 << (j - 1))][j - 1]);
            }
        }
    }

    int queryMin(int low, int high) {
        int k = int(log2(high - low + 1));
        return min(table[low][k], table[high - (1 << k) + 1][k]);
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>_rmqMin</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
