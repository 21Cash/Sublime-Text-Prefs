<snippet>
	<content><![CDATA[

std::string subOne(const std::string& input) {
    if(input == "1") return "0";
    // Check if the input is "0" or empty, return "0" in that case
    if (input == "0" || input.empty()) {
        return "0";
    }

    std::string result = input;
    int carry = -1;

    for (int i = result.size() - 1; i >= 0; --i) {
        int digit = result[i] - '0' + carry;

        if (digit < 0) {
            digit += 10;
            carry = -1;
        } else {
            carry = 0;
        }

        result[i] = '0' + digit;
    }

    // Remove leading zeros
    size_t firstNonZero = result.find_first_not_of('0');
    result = result.substr(firstNonZero);

    return result;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>_minusOneString</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
